// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique @db.VarChar(255)
  password  String   @db.VarChar(255)
  openAiKey String?  @db.Text
  t212Key   String?  @db.Text
  firstName String?  @db.VarChar(100)
  lastName  String?  @db.VarChar(100)
  isActive  Boolean  @default(true)
  lastLogin DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?

  // Relations
  sessions UserSession[]
  apiKeyLogs ApiKeyLog[]

  @@index([email])
  @@index([isActive])
  @@index([createdAt])
  @@map("users")
}

model UserSession {
  id        String   @id @default(cuid())
  userId    Int
  token     String   @unique @db.Text
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([expiresAt])
  @@map("user_sessions")
}

model ApiKeyLog {
  id        Int      @id @default(autoincrement())
  userId    Int
  keyType   String   @db.VarChar(50) // 'openai' or 't212'
  action    String   @db.VarChar(50) // 'created', 'updated', 'deleted', 'accessed'
  ipAddress String?  @db.VarChar(45)
  userAgent String?  @db.Text
  createdAt DateTime @default(now())

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([keyType])
  @@index([action])
  @@index([createdAt])
  @@map("api_key_logs")
}
